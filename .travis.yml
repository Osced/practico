#	Copyright (C) 2013  John F. Arroyave Gutiérrez
#						unix4you2@gmail.com
#
#	This program is free software; you can redistribute it and/or
#	modify it under the terms of the GNU General Public License
#	as published by the Free Software Foundation; either version 2
#	of the License, or (at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program; if not, write to the Free Software
#	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#	
#		Title: TravisCI
#		Ubicacion *[/.travis.yml]*.  Archivo con definicion de pruebas automaticas
#       PROBAR SINTAXIS MEDIANTE:    http://yaml-online-parser.appspot.com/


language: php
# Seleccion de las versiones de lenguaje a probar: 5.2.17, 5.3.x, 5.4.x, Hack de face  etc
# TravisCI no soporta versiones 5.2.x and 5.3.x en Trusty. Se especifica distribucion Precise para esas versiones.
matrix:
  include:
  # Pruebas sobre multiple version PHP y versiones MySQL 5.5 (php 5.3) y MySQL 5.6 (php 5.4+)
    - php: 5.3
      dist: precise
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: 5.4
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: 5.5
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: 5.6
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: 7.0
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: 7.1
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: hhvm
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: hhvm-3.3
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: hhvm-3.6
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: hhvm-3.9
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: hhvm-3.12
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: hhvm-3.15
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: hhvm-3.18
      env: DB=mysql
      dist: trusty
      sudo: required
      services:
      - mysql
      - postgresql
      
    - php: hhvm-nightly
      dist: trusty
      env: DB=mysql
      sudo: required
      services:
      - mysql
      - postgresql


# Configura notificaciones (email, IRC, campfire etc)
notifications:
#  irc: "irc.freenode.org#yourfavouriteroomfortravis"
  email: "unix4you2@gmail.com"

# Lista de ramas que no sera tenidas en cuenta
branches:
  except:
    - MedidorDeVelocidad
    - gh-pages
    - HabilitacionAuditorias
    - AcordeonOpcionesCentrales
    - SeguimientoGA
    - ImplementacionBootStrap
    - SubFormularios
    - PruebasDeSoftware
    - GeneracionGraficosResponsive
    - CaptchaVisual
    - MaterialDesign
    - EditorWYSIWYGResponsive
    - SocialParser
    - MaquetacionBootstrap

# Ramas del repositorio a tener en cuenta
branches:
  only:
    - master
    # Mediante expresiones regulares
    #    - /^deploy-.*$/

#before_install:
# Comandos para preparar el sistema antes de las pruebas para instalar prerequisitos o dependencias
#ls -al

# Comandos para instalar prerequisitos o dependencias
install:
  #- pear install pear/PHP_CodeSniffer
  - phpenv rehash
  #Verificamos la instalacion y el soporte de estandares
  #- phpcs -i
  #Otra forma: php pyrus.phar install pear/PHP_CodeSniffer-2.0.0RC4
  #Otra forma: pear install PHP_CodeSniffer-2.0.0RC4
  #Otra forma: pyrus install pear/PHP_CodeSniffer



# Activacion especifica para MySQL ver 5.7 
    #addons:
    #  apt:
    #    sources:
    #      - mysql-5.7-trusty
    #    packages:
    #      - mysql-server
    #      - mysql-client



# Ejecuta scripts antes de correr las pruebas, puede utilizar variables de entorno
before_script:
  
  #Creamos la base de datos para la instalacion de prueba
  #- sh -c "mysql -e 'create database practico;'"    #Metodo 1
  - mysql -e 'create database practico;'             #Metodo 2
  - psql -c 'create database practico;' -U postgres

  #Creamos el directorio de pruebas en caso de no existir
  #- mkdir dev_tools/tests

  #Asegura permisos completos en la carpeta de pruebas
  - chmod -R 777 dev_tools/tests

  #Ejecuta las pruebas para codigo PHP obsoleto de acuerdo la version de prueba utilizada
  #- phpcs --standard=PEAR index.php
  #Otra forma: phpcs --standard=Zend index.php
  #Otra forma: phpcs --standard=PHP53Compatibility core/

  #  - if [[ "$DB" == "pgsql" ]]; then psql -c "DROP DATABASE IF EXISTS hello_world_test;" -U postgres; fi
  #  - if [[ "$DB" == "pgsql" ]]; then psql -c "create database hello_world_test;" -U postgres; fi
  #  - if [[ "$DB" == "mysql" ]]; then mysql -e "create database IF NOT EXISTS hello_world_test;" -uroot; fi

# Comandos para construir.  Todos deben retornar cero, cualquier otra salida se considera una falla
script:
  - php dev_tools/tests/t_obsoletas.php
  - php dev_tools/tests/t_archivos.php
  - sh -c "mysql --version"
  - php dev_tools/tests/t_basedatos.php
#  - dev_tools/parche2zip.sh                 # Script para generacion de parches entre versiones
#  - dev_tools/practico2zip.sh              # Script para empaquetado y distribución de nuevas versiones

# Comandos a ejecutar cuando se finaliza la consutrccion sin problemas
#after_success

# Comandos a ejecutar cuando se obtuvo algun error
#after_failure

# Comandos finales a ejecutar despues de ejecutar script: con exito
#after_script